{"ast":null,"code":"import _toConsumableArray from \"/Users/student/dev/2portfolio-tracker/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/student/dev/2portfolio-tracker/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/student/dev/2portfolio-tracker/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/student/dev/2portfolio-tracker/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/student/dev/2portfolio-tracker/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/student/dev/2portfolio-tracker/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/student/dev/2portfolio-tracker/client/src/context/InvestmentProvider.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar InvestmentContext = React.createContext();\n\nvar InvestmentProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InvestmentProvider, _Component);\n\n  function InvestmentProvider() {\n    var _this;\n\n    _classCallCheck(this, InvestmentProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InvestmentProvider).call(this));\n\n    _this.getInvestments = function () {\n      axios.get('/portfolio').then(function (response) {\n        _this.setState({\n          currentInvestments: response.data.investments,\n          tickerGet: response.data.tickerGet\n        });\n      }).catch(function (err) {\n        return console.log(err.response.data.errMsg);\n      });\n    };\n\n    _this.addInvestment = function (newInvestment) {\n      axios.post('/portfolio', newInvestment).then(function (response) {\n        _this.setState(function (prevState) {\n          return {\n            currentInvestments: [].concat(_toConsumableArray(prevState.currentInvestments), [response.data])\n          };\n        });\n      }).catch(function (err) {\n        return console.log(err.response.data.errMsg);\n      });\n    };\n\n    _this.state = {\n      currentInvestments: [],\n      tickerGet: []\n    };\n    return _this;\n  }\n\n  _createClass(InvestmentProvider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(InvestmentContext.Provider, {\n        value: {\n          currentInvestments: this.state.currentInvestments,\n          getInvestments: this.getInvestments,\n          addInvestment: this.addInvestment\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return InvestmentProvider;\n}(Component);\n\nexport default InvestmentProvider;\nexport var withInvestments = function withInvestments(C) {\n  return function (props) {\n    return React.createElement(InvestmentContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, function (value) {\n      return React.createElement(C, Object.assign({}, props, value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/student/dev/2portfolio-tracker/client/src/context/InvestmentProvider.js"],"names":["React","Component","axios","InvestmentContext","createContext","InvestmentProvider","getInvestments","get","then","response","setState","currentInvestments","data","investments","tickerGet","catch","err","console","log","errMsg","addInvestment","newInvestment","post","prevState","state","props","children","withInvestments","C","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,iBAAiB,GAAGH,KAAK,CAACI,aAAN,EAA1B;;IAEMC,kB;;;;;AACF,gCAAc;AAAA;;AAAA;;AACV;;AADU,UAQdC,cARc,GAQG,YAAM;AACnBJ,MAAAA,KAAK,CAACK,GAAN,CAAU,YAAV,EAAwBC,IAAxB,CAA6B,UAAAC,QAAQ,EAAI;AACrC,cAAKC,QAAL,CAAc;AACVC,UAAAA,kBAAkB,EAAEF,QAAQ,CAACG,IAAT,CAAcC,WADxB;AAEVC,UAAAA,SAAS,EAAEL,QAAQ,CAACG,IAAT,CAAcE;AAFf,SAAd;AAIH,OALD,EAMCC,KAND,CAMO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBO,MAA9B,CAAJ;AAAA,OANV;AAOH,KAhBa;;AAAA,UAkBdC,aAlBc,GAkBE,UAAAC,aAAa,EAAI;AAC7BnB,MAAAA,KAAK,CAACoB,IAAN,CAAW,YAAX,EAAyBD,aAAzB,EAAwCb,IAAxC,CAA6C,UAAAC,QAAQ,EAAI;AACrD,cAAKC,QAAL,CAAc,UAAAa,SAAS;AAAA,iBAAK;AACxBZ,YAAAA,kBAAkB,+BAAMY,SAAS,CAACZ,kBAAhB,IAAoCF,QAAQ,CAACG,IAA7C;AADM,WAAL;AAAA,SAAvB;AAGH,OAJD,EAKCG,KALD,CAKO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBO,MAA9B,CAAJ;AAAA,OALV;AAMH,KAzBa;;AAEV,UAAKK,KAAL,GAAa;AACTb,MAAAA,kBAAkB,EAAE,EADX;AAETG,MAAAA,SAAS,EAAE;AAFF,KAAb;AAFU;AAMb;;;;6BAoBO;AACJ,aACI,oBAAC,iBAAD,CAAmB,QAAnB;AACI,QAAA,KAAK,EAAE;AACHH,UAAAA,kBAAkB,EAAE,KAAKa,KAAL,CAAWb,kBAD5B;AAEHL,UAAAA,cAAc,EAAE,KAAKA,cAFlB;AAGHc,UAAAA,aAAa,EAAE,KAAKA;AAHjB,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMM,KAAKK,KAAL,CAAWC,QANjB,CADJ;AAUH;;;;EAtC4BzB,S;;AAyCjC,eAAeI,kBAAf;AAEA,OAAO,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC;AAAA,SAAI,UAAAH,KAAK;AAAA,WACrC,oBAAC,iBAAD,CAAmB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,UAAAI,KAAK;AAAA,aAAI,oBAAC,CAAD,oBAAOJ,KAAP,EAAkBI,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KADV,CADqC;AAAA,GAAT;AAAA,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst InvestmentContext = React.createContext()\n\nclass InvestmentProvider extends Component {\n    constructor() {\n        super()\n        this.state = {\n            currentInvestments: [],\n            tickerGet: []\n        }\n    }\n\n    getInvestments = () => {\n        axios.get('/portfolio').then(response => {\n            this.setState({\n                currentInvestments: response.data.investments,\n                tickerGet: response.data.tickerGet\n            })\n        })\n        .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    addInvestment = newInvestment => {\n        axios.post('/portfolio', newInvestment).then(response => {\n            this.setState(prevState => ({\n                currentInvestments: [...prevState.currentInvestments, response.data]\n            }))\n        })\n        .catch(err => console.log(err.response.data.errMsg))\n    }\n    render(){\n        return(\n            <InvestmentContext.Provider\n                value={{\n                    currentInvestments: this.state.currentInvestments,\n                    getInvestments: this.getInvestments,\n                    addInvestment: this.addInvestment\n                }}>\n                { this.props.children }\n            </InvestmentContext.Provider>\n        )\n    }\n}\n\nexport default InvestmentProvider\n\nexport const withInvestments = C => props => (\n    <InvestmentContext.Consumer>\n        {value => <C {...props} {...value} />}\n    </InvestmentContext.Consumer>\n)\n\n\n"]},"metadata":{},"sourceType":"module"}